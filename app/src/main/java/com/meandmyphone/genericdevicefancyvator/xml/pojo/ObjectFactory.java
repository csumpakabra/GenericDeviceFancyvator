//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.06.03 at 06:00:00 PM CEST 
//


package com.meandmyphone.genericdevicefancyvator.xml.pojo;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.meandmyphone.genericdevicefancyvator.core.pojo package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.meandmyphone.genericdevicefancyvator.core.pojo
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Scene }
     * 
     */
    public Scene createScene() {
        return new Scene();
    }

    /**
     * Create an instance of {@link Sprite }
     * 
     */
    public Sprite createSprite() {
        return new Sprite();
    }

    /**
     * Create an instance of {@link Background }
     * 
     */
    public Background createBackground() {
        return new Background();
    }

    /**
     * Create an instance of {@link Scene.SceneProperties }
     * 
     */
    public Scene.SceneProperties createSceneSceneProperties() {
        return new Scene.SceneProperties();
    }

    /**
     * Create an instance of {@link FlipbookTransition }
     * 
     */
    public FlipbookTransition createFlipbookTransition() {
        return new FlipbookTransition();
    }

    /**
     * Create an instance of {@link ScaleTransition }
     * 
     */
    public ScaleTransition createScaleTransition() {
        return new ScaleTransition();
    }

    /**
     * Create an instance of {@link FadeTransition }
     * 
     */
    public FadeTransition createFadeTransition() {
        return new FadeTransition();
    }

    /**
     * Create an instance of {@link Transition }
     * 
     */
    public Transition createTransition() {
        return new Transition();
    }

    /**
     * Create an instance of {@link TranslateTransition }
     * 
     */
    public TranslateTransition createTranslateTransition() {
        return new TranslateTransition();
    }

    /**
     * Create an instance of {@link RotateTransition }
     * 
     */
    public RotateTransition createRotateTransition() {
        return new RotateTransition();
    }

    /**
     * Create an instance of {@link DiffuseBackground }
     * 
     */
    public DiffuseBackground createDiffuseBackground() {
        return new DiffuseBackground();
    }

    /**
     * Create an instance of {@link OnClick }
     * 
     */
    public OnClick createOnClick() {
        return new OnClick();
    }

    /**
     * Create an instance of {@link ImageBackground }
     * 
     */
    public ImageBackground createImageBackground() {
        return new ImageBackground();
    }

    /**
     * Create an instance of {@link Camera }
     * 
     */
    public Camera createCamera() {
        return new Camera();
    }

    /**
     * Create an instance of {@link Sprite.Transition }
     * 
     */
    public Sprite.Transition createSpriteTransition() {
        return new Sprite.Transition();
    }

    /**
     * Create an instance of {@link Background.BackgroundSource }
     * 
     */
    public Background.BackgroundSource createBackgroundBackgroundSource() {
        return new Background.BackgroundSource();
    }

}
